[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Nexus\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Nexus\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Eclipse Adoptium Java 11.0.20.1)
[debug]       Load.loadUnit: plugins took 71.154ms
[debug]       Load.loadUnit: defsScala took 0.1589ms
[debug] [Loading] Scanning directory C:\Users\Nexus\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Nexus\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.1655 ms
[debug]           Load.resolveProject(global-plugins) took 29.7392ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Nexus\.sbt\1.0\plugins, plugins: List(<none>))) took 57.5401ms
[debug] [Loading] Done in C:\Users\Nexus\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 71.1281ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.152ms
[debug]     Load.loadUnit(file:/C:/Users/Nexus/.sbt/1.0/plugins/, ...) took 150.6009ms
[debug]   Load.apply: load took 295.1758ms
[debug]   Load.apply: resolveProjects took 4.0753ms
[debug]   Load.apply: finalTransforms took 48.1682ms
[debug]   Load.apply: config.delegates took 12.2241ms
[debug]   Load.apply: Def.make(settings)... took 494.1661ms
[debug]   Load.apply: structureIndex took 148.8684ms
[debug]   Load.apply: mkStreams took 4.4886ms
[info] loading global plugins from C:\Users\Nexus\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3698.8192ms
[debug]                 Load.loadUnit: plugins took 19.4627ms
[debug]                 Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory D:\учеба\Расп сист\Магистратура\intelj_test\project\project
[debug]                   Load.loadUnit: mkEval took 3.7652ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\учеба\Расп сист\Магистратура\intelj_test\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3072 ms
[info] loading settings for project intelj_test-build-build from metals.sbt ...
[debug]                     Load.resolveProject(intelj_test-build-build) took 2.4968ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id intelj_test-build-build, base: D:\учеба\Расп сист\Магистратура\intelj_test\project\project, plugins: List(<none>))) took 4.1169ms
[debug] [Loading] Done in D:\учеба\Расп сист\Магистратура\intelj_test\project\project, returning: (intelj_test-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 1390.1859ms
[debug]                 Load.loadUnit: cleanEvalClasses took 2.9727ms
[debug]               Load.loadUnit(file:/D:/учеба/Расп%20сист/Магистратура/intelj_test/project/project/, ...) took 1413.0448ms
[debug]             Load.apply: load took 1413.9353ms
[debug]             Load.apply: resolveProjects took 0.1168ms
[debug]             Load.apply: finalTransforms took 21.2113ms
[debug]             Load.apply: config.delegates took 0.2141ms
[debug]             Load.apply: Def.make(settings)... took 75.163ms
[debug]             Load.apply: structureIndex took 18.9293ms
[debug]             Load.apply: mkStreams took 0.0023ms
[info] loading project definition from D:\учеба\Расп сист\Магистратура\intelj_test\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 1908.6151ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory D:\учеба\Расп сист\Магистратура\intelj_test\project
[debug]             Load.loadUnit: mkEval took 0.1297ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\учеба\Расп сист\Магистратура\intelj_test\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7372 ms
[info] loading settings for project intelj_test-build from metals.sbt,idea.sbt ...
[debug]               Load.resolveProject(intelj_test-build) took 53.2598ms
[debug]             Load.loadTransitive: finalizeProject(Project(id intelj_test-build, base: D:\учеба\Расп сист\Магистратура\intelj_test\project, plugins: List(<none>))) took 55.3192ms
[debug] [Loading] Done in D:\учеба\Расп сист\Магистратура\intelj_test\project, returning: (intelj_test-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1038.3553ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.362ms
[debug]         Load.loadUnit(file:/D:/учеба/Расп%20сист/Магистратура/intelj_test/project/, ...) took 2949.813ms
[debug]       Load.apply: load took 2951.0898ms
[debug]       Load.apply: resolveProjects took 0.1667ms
[debug]       Load.apply: finalTransforms took 26.442ms
[debug]       Load.apply: config.delegates took 0.243ms
[debug]       Load.apply: Def.make(settings)... took 45.7635ms
[debug]       Load.apply: structureIndex took 14.5942ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from D:\учеба\Расп сист\Магистратура\intelj_test\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[success] Generated .bloop\intelj_test-build.json
[success] Total time: 2 s, completed 12 окт. 2023 г., 22:53:11
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5754.1957ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory D:\учеба\Расп сист\Магистратура\intelj_test
[debug]       Load.loadUnit: mkEval took 0.2918ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5691 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 92.3802ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\учеба\Расп сист\Магистратура\intelj_test, plugins: List(<none>))) took 96.5401ms
[debug] [Loading] Done in D:\учеба\Расп сист\Магистратура\intelj_test, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 812.7926ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.3985ms
[debug]   Load.loadUnit(file:/D:/учеба/Расп%20сист/Магистратура/intelj_test/, ...) took 6570.7103ms
[debug] Load.apply: load took 6575.7762ms
[debug] Load.apply: resolveProjects took 0.1084ms
[debug] Load.apply: finalTransforms took 27.7018ms
[debug] Load.apply: config.delegates took 0.1753ms
[debug] Load.apply: Def.make(settings)... took 47.7698ms
[debug] Load.apply: structureIndex took 10.5099ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to intelj_test (in build file:/D:/учеба/Расп%20сист/Магистратура/intelj_test/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55468 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55468, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to intelj_test (in build file:/D:/учеба/Расп%20сист/Магистратура/intelj_test/)
[debug] > Exec(idea-shell, None, None)
